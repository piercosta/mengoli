System mengoli

Event start : start    //from robot GUI;  X=robotgui(CMD) CMD=s(low)
Event stop : stop
Event takepicture : takepicture
Event obstacle : obstacle

Event obstacle    : p( Distance, Angle  )  
Dispatch polar    : p( Distance, Angle  )    



Event sonar : p( Distance, SID )    
Event numOfSonars : numOfSonars( N ) 

Context  ctxControl  ip [ host="localhost"  port=8070 ]

QActor control_logic context ctxControl {
	
	
	Plan init normal                                      
			switchToPlan waitForNumSensors
	
	Plan waitForNumSensors
			println("waiting for sensors") ;
			sense time(600000) numOfSonars  -> continue ;
			[ ?? msg(E,'event',S,none,numOfSonars(N),F) ] println(numOfSonars(N));
			switchToPlan computeSensorData;
			switchToPlan test		
	
	Plan sendStart resumeLastPlan
			delay time(5000);
			emit start : start
	
	Plan computeSensorData resumeLastPlan
			delay time (1000);
			[ ?? msg(E,'event',S,none,p(Distance, SID),N) ] println (sonar(Distance, SID));
			println("compute data");
			repeatPlan 8
			
	Plan test resumeLastPlan
			switchToPlan sendStart;
			delay time(5000);
			switchToPlan sendTakepicture;
			delay time(5000);
			switchToPlan sendStop
			
	Plan sendStop resumeLastPlan
			emit stop : stop
			
	Plan sendTakepicture resumeLastPlan
			emit takepicture : takepicture
		
}

QActor sonar_filter context ctxControl {
	Plan init normal
			                                     
			switchToPlan waitForNumSensors
	
	
	
		
}